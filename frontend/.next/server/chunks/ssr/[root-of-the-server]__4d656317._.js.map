{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/iKlejdi/Desktop/construction/frontend/src/context/AuthContext.tsx"],"sourcesContent":["\"use client\";\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  token: string | null;\n  user: User | null;\n  login: (token: string) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  token: null,\n  user: null,\n  login: () => {},\n  logout: () => {},\n});\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [token, setToken] = useState<string | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!token) return;\n    const fetchUser = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:4000/me\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setUser(res.data);\n      } catch {\n        setToken(null);\n      }\n    };\n    fetchUser();\n  }, [token]);\n\n  const login = (newToken: string) => setToken(newToken);\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAFA;;;;AAiBA,MAAM,4BAAc,IAAA,sNAAa,EAAkB;IACjD,OAAO;IACP,MAAM;IACN,OAAO,KAAO;IACd,QAAQ,KAAO;AACjB;AAEO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAClD,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAc;IAE9C,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,OAAO;QACZ,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,MAAM,MAAM,gJAAK,CAAC,GAAG,CAAC,4BAA4B;oBACtD,SAAS;wBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;oBAAC;gBAC9C;gBACA,QAAQ,IAAI,IAAI;YAClB,EAAE,OAAM;gBACN,SAAS;YACX;QACF;QACA;IACF,GAAG;QAAC;KAAM;IAEV,MAAM,QAAQ,CAAC,WAAqB,SAAS;IAC7C,MAAM,SAAS;QACb,SAAS;QACT,QAAQ;IACV;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAO;YAAM;YAAO;QAAO;kBACvD;;;;;;AAGP;AAEO,MAAM,UAAU,IAAM,IAAA,mNAAU,EAAC","debugId":null}}]
}